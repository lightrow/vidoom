class PistolStartHandler : EventHandler
 {
   override void PlayerEntered (PlayerEvent e)
   {
		PlayerInfo player = players[e.PlayerNumber];
		int IntroChance;
		player.mo.a_setblend("000000",1.00,70,"000000",0.0);
		// LocalAmbientSound("level/intro",127);
		
		// CRINGE YIKES SMH FAM
		//IntroChance = random(0,3);
		//if (IntroChance == 3) { player.mo.a_playsound("player/greet",2); }

		if (G_SkillPropertyInt(SKILLP_ACSReturn) == 666 || CVar.GetCvar("vi_pistolstart").getBool()) {
			player.mo.ClearInventory();
			PlayerPawn(player.mo).ACS_NamedExecute("ResetHealth");
			player.mo.GiveInventory("Rage", 1);
			player.mo.GiveInventory("FireAxe", 1);
			player.mo.GiveInventory("Clip", 35);
			player.mo.GiveInventory("PistolLoad", 10);
			player.mo.GiveInventory("Handcannon", 1);
			player.mo.GiveInventory("Nade", 1);
			Player.mo.GiveInventory("NadeAmmo", 2);
	}
		
   }
 }
 
 
class GibHandler: EventHandler
{
	override void WorldThingSpawned(WorldEvent e)
	{
		if (!e.Thing) return;

		bool isMonster = e.Thing.bIsMonster;

		if (isMonster && !e.Thing.CountInv("GibChecker"))
		{
			e.Thing.A_GiveInventory("GibChecker", 1);
		}
	}
}

class GibChecker: Inventory 
{
	bool gibbing;
	bool gibsOut;
	bool hardGib;
	int HARD_GIB_HEALTH;

	override void BeginPlay() {
		HARD_GIB_HEALTH = -30;
	}

	override void Tick() {
		if (!Owner || gibsOut || !CVar.getCvar("vi_gore").getBool()) {
			return;
		}
		
		if (Owner is "LostSoul"){
			return;
		}
		
		if (!hardGib && Owner.GetGibHealth() < HARD_GIB_HEALTH){
			hardGib = true;
		}
		
		bool isExploding = Owner is "PainElemental" || Owner is "CyberDemon";
		
		if (HARD_GIB_HEALTH != 0 && isExploding) {
			HARD_GIB_HEALTH = 0;
			hardGib = true;
			// meat pinata elementals
		}
		
		if (gibbing && !gibsOut){
			gibsOut = true;
			if (Owner.FindState('XDeath', true) != NULL && !Owner.InStateSequence(Owner.CurState, Owner.ResolveState('XDeath'))){
				Owner.setstatelabel("XDeath");
			}
			if (Owner is "Cacodemon"){
				Owner.A_SpawnItemEx("BlueGoreController",0,0,0,Owner.VelX,Owner.VelY,Owner.VelZ,Owner.Angle,SXF_ABSOLUTEANGLE|SXF_ABSOLUTEPOSITION|SXF_ABSOLUTEVELOCITY);
			} else 
			if (Owner is "HellKnight" || Owner is "BaronOfHell"){
				Owner.A_SpawnItemEx("GreenGoreController",0,0,0,Owner.VelX,Owner.VelY,Owner.VelZ,Owner.Angle,SXF_ABSOLUTEANGLE|SXF_ABSOLUTEPOSITION|SXF_ABSOLUTEVELOCITY);
			} else if (isExploding) {
				Owner.A_SpawnItemEx("PainElementalGoreController",0,0,0,Owner.VelX,Owner.VelY,Owner.VelZ,Owner.Angle,SXF_ABSOLUTEANGLE|SXF_ABSOLUTEPOSITION|SXF_ABSOLUTEVELOCITY);
			} else if (Owner.Mass > 100) {
				Owner.A_SpawnItemEx("BigGoreController",0,0,0,Owner.VelX,Owner.VelY,Owner.VelZ,Owner.Angle,SXF_ABSOLUTEANGLE|SXF_ABSOLUTEPOSITION|SXF_ABSOLUTEVELOCITY);
			} else  {
				Owner.A_SpawnItemEx("GoreController",0,0,0,Owner.VelX,Owner.VelY,Owner.VelZ,Owner.Angle,SXF_ABSOLUTEANGLE|SXF_ABSOLUTEPOSITION|SXF_ABSOLUTEVELOCITY);
			}	
		}
		
		if (gibbing) {
			return;
		}
		
		if ((hardGib && Owner.Health <= HARD_GIB_HEALTH ) || Owner.Health < Owner.GetGibHealth() || (Owner.FindState('XDeath', true) != NULL && Owner.InStateSequence(Owner.CurState, Owner.ResolveState('XDeath')))) {
			Owner.bSpriteFlip = RandomPick(false, true);
			gibbing = true;
		}
		
		
		

	}
}
