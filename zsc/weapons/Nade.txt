// less clunky than satchel, but still clunky

Class FakeAmmo:Ammo
{

}

Class Nade : Weapon
{
  default
  {
	Weapon.BobStyle "Alpha";
	Weapon.BobSpeed 3.12;
	Weapon.BobRangeX 0.4;
	Weapon.BobRangeY 0.4;
	weapon.ammotype1 "FakeAmmo";
	weapon.ammouse1 9000;
	weapon.ammotype2 "NadeAmmo";
	weapon.ammouse2 1;
	Weapon.SlotNumber 0;
	inventory.pickupmessage "a lost grenade";
	+INVENTORY.UNDROPPABLE;
	+WEAPON.NOAUTOAIM ;
	-WEAPON.AMMO_OPTIONAL;
  }
	States
	{
	Spawn:
		NADE p -1;
		loop;
	Ready:
		TNT1 A 0 A_JumpIfInventory("isSliding",1,"SlideStart");
		nade A 1;
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		loop;
	SlideStart:
		nade A 1 Offset(0,33);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		nade A 1 Offset(0,35);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		nade A 1 Offset(0,38);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		nade A 1 Offset(0,40);
		goto Sliding;
	Sliding:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("isSliding",1,2);
		TNT1 A 0 A_Jump(256,"SlideEnd");
		nade A 1 Offset(0,40);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		Loop;
	SlideEnd:
		nade A 1 Offset(0,40);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		nade A 1 Offset(0,38);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		nade A 2 Offset(0,35);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		nade A 2 Offset(0,33);
		goto Ready	;
   Deselect: 
      TNT1 AAAAAAAAAAAAAAAA 0 A_Lower;
      TNT1 AAAAAAA 1 A_Lower;
      Loop;
	Select:
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		nade a 1 Offset(-67, 100) A_PlaySound("weapons/nadeup",7);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		nade a 1 Offset(-40, 81);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		nade a 1 Offset(-24, 52);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		nade a 1 Offset(-15, 46);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		nade A 1 Offset(-6, 36);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		nade A 2 Offset(-2, 34);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		goto Fire;
	Fire:
		Nadf a 1;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		Nadf b 1;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		Nadf c 1 ;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		Nadf d 1;
		Nadf e 1;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		Nadf f 2 A_Playsound("weapons/nadeclick",1);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		Nadf f 2 Offset(-5,35) ;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		Nadf g 2 ;
		tnt1 a 0 a_setangle(angle-0.0);
		tnt1 a 0 a_setpitch(pitch-0.25);
		tnt1 a 0; //a_setroll(roll+0.25)	;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		Nadf h 1 ;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		Nadf i 1 ;
		tnt1 a 0 a_setangle(angle-0.25);
		tnt1 a 0 a_setpitch(pitch-0.5);
		tnt1 a 0 ;//a_setroll(roll+0.5);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		Nadf j 1 ;
		tnt1 a 0 a_setangle(angle-0.5);
		tnt1 a 0 a_setpitch(pitch-0.75);
		tnt1 a 0 ;//a_setroll(roll+0.75);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 a 1;
		tnt1 a 0 a_setangle(angle-0.25);
		tnt1 a 0 a_setpitch(pitch-0.5);
		tnt1 a 0 ;//a_setroll(roll+0.5);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 a 1;
		TNT1 a 1 A_Playsound("weapons/nadethrow",7);
		TNT1 a 1;
		tnt1 a 0 a_setangle(angle+0.25);
		tnt1 a 0 a_setpitch(pitch+0.5);
		tnt1 a 0 ;//a_setroll(roll-0.5);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 a 1;
		tnt1 a 0 a_setangle(angle+0.25);
		tnt1 a 0 a_setpitch(pitch+0.5);
		tnt1 a 0; //a_setroll(roll-0.5);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		nade b 1 ;
		tnt1 a 0 a_setangle(angle+1.25);
		tnt1 a 0 a_setpitch(pitch+1);
		tnt1 a 0 ;//a_setroll(roll-1);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		nade b 1 ;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		nade c 1 A_FireCustomMissile("ThrownNade",0,0,12,5,0,2);
		TNT1 A 0 A_TakeInventory("NadeAmmo",1);
		tnt1 a 0 a_setangle(angle+0.5);
		tnt1 a 0 a_setpitch(pitch+0.5);
		tnt1 a 0 a_setroll(roll-0.5);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		nade d 1;
		TNT1 A 0 A_Jump(150,1);
		TNT1 a 0 A_Playsound("player/exhale",3);
		tnt1 a 0 a_setangle(angle+0.25);
		tnt1 a 0 a_setpitch(pitch+0.5);
		tnt1 a 0 a_setroll(roll-0.5);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		nade e 1;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 1;
		tnt1 a 0 a_setangle(angle-0.5);
		tnt1 a 0 a_setpitch(pitch-0.5);
		tnt1 a 0 a_setroll(roll+0.5);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 1;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 1;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 1;
		tnt1 a 0 a_setangle(angle-0.5);
		tnt1 a 0 a_setpitch(pitch-0.5);
		tnt1 a 0 a_setroll(roll+0.5);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 1;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 1;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
 		tnt1 a 0 a_setangle(angle-0.25);
		goto SelectLast;
	SelectLast:
		TNT1 A 0;
		TNT1 A 0 {
			let gal = VoyageGal(player.mo);
			string lastWeapon = gal.LastWeapon;
			A_SelectWeapon(lastWeapon);
		}
		TNT1 A 0;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		goto Select;
		
	}
}


Class NadeAmmo: Ammo 
{
 default{
	  Inventory.MaxAmount 3;
  }
}


Class ThrownNade: Actor
{
  default{
    Projectile;
    +SHOOTABLE;
    +THRUGHOST;
    +THRUSPECIES;
    +BOUNCEONWALLS;
    +BOUNCEONFLOORS;
    +BOUNCEONCEILINGS;
    +ALLOWBOUNCEONACTORS;
    -NOGRAVITY;
    +MOVEWITHSECTOR;
    +EXTREMEDEATH;
    +USEBOUNCESTATE;
    +CANBOUNCEWATER;
    +DONTBLAST;
    +DONTTHRUST;
    +ROLLSPRITE;
    +ROLLCENTER;
    +QUICKTORETALIATE;
    +LOOKALLAROUND;
    +FRIENDLY;
    +DROPPED;
    +STANDSTILL;
    Species "Player";
    Health 1;
    Damage 0;
    Speed 50;
    gravity 0.9;
    Scale 0.40;
    Friction 1;
    BounceType "Doom";
    DamageType "NadeBoom";
    BounceFactor 0.4;
    WallBounceFactor 0.4;
    Radius 3;
    Height 2;
    Renderstyle "Normal";
  }
  
  int fuse;
  int rollOffset;
  int nextBeep;
  int expDelay;
  
  override void BeginPlay(){
	fuse = 80;
	nextBeep = Ceil(fuse - 5);
	rollOffset = 0;
	expDelay = 5;
  }
  
  override void Tick() {
	if (fuse > 0){
		fuse--;
		if (fuse % nextBeep == 0){
			A_Playsound("weapons/nadetick",2);
			nextBeep -= Ceil(fuse/4);
		}
		if (fuse % nextBeep >= 0 && fuse % nextBeep < 3){
			bBRIGHT = true;
		} else {
			bBRIGHT = false;
		}
	} else if (expDelay > 0) {
		A_Playsound("weapons/nadetick",2);
		expDelay--;
	}
	Super.Tick();
  }
  
  States
    {
    Spawn:
		NADE P 1 A_SetRoll(frandom(0,360));
		goto Roll1;
	See:
	Crash:
	XDeath:
    ActualDeath:
		TNT1 A 0 {
			fuse = 0;
			expDelay = 0;
		}
		TNT1 A 0 A_setRoll(0);
		TNT1 A 0 A_AlertMonsters;
		//TNT1 A 0 A_Blast(0,255,200,20) // hits through walls;
		TNT1 A 0 A_Explode(128,200);
		TNT1 A 0 A_PlaySound ("weapons/nadeboom", 5, 1, 0, 0.4);
		TNT1 A 0 A_ChangeFlag ("NOGRAVITY", 1);
		TNT1 A 0 A_Stop;
		TNT1 A 0 A_SpawnItemEx("DukeSplosion");
		TNT1 A 0 A_Jump(150,3);
		TNT1 A 0 A_PlaySound("weapons/debris",6,1,0,2);
		TNT1 A 50;
		TNT1 A 0;
		Stop;
	Life:
		NADE P 1 A_SetRoll(roll+rollOffset);
		TNT1 A 0 A_JumpIf(expDelay==0, "ActualDeath");
		Loop;
	Roll1:
		TNT1 A 1 {
			rollOffset = 15;
		}
		goto Life;
	Roll2:
		TNT1 A 1 {
			rollOffset = 35;
		}
		goto Life;
	Roll3:
		TNT1 A 1 {
			rollOffset = 45;
		}
		goto Life;
	Roll4:
		TNT1 A 1 {
			rollOffset = -35;
		}
		goto Life;
	Roll5:
		TNT1 A 1 {
			rollOffset = -25;
		}
		goto Life;
	Roll6:
		TNT1 A 1 {
			rollOffset = -15;
		}
		goto Life;
	Roll7:
		TNT1 A 1 {
			rollOffset = 25;
		}
		goto Life;
	Roll8:
		TNT1 A 1 {
			rollOffset = -45;
		}
		goto Life;
	Bounce:
		TNT1 A 0 A_SetRoll(frandom(0,360));
		TNT1 A 0 A_Playsound("weapons/nadebounce",1);
		TNT1 A 0 A_Jump(256,"Roll1","Roll2","Roll3","Roll4","Roll5","Roll6","Roll7","Roll8");
	Death:
		TNT1 A 0 ;
		TNT1 A 0 A_ChangeVelocity(frandom(0,1),0,0,CVF_RELATIVE);
	Lying:
		NADE P 1 A_LookEx(0,0,200,0,360,"ActualDeath"); 
		TNT1 A 0 A_JumpIf(expDelay==0, "ActualDeath");
		loop;
    }
}

