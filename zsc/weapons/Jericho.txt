Class Handcannon : Pistol replaces Pistol
{
	float recoil;
	bool fullauto;

	override void BeginPlay() {	
		recoil = 2;
		fullauto = false;
		Super.BeginPlay();
	}

	default
	{
		Weapon.BobStyle "Alpha";
		Weapon.BobSpeed 3.12;
		Weapon.BobRangeX 0.2;
		Weapon.BobRangeY 0.3;
		decal "bulletchip";
		Weapon.AmmoType1 "PistolLoad";
		inventory.pickupmessage "a lost Jericho 941";
		Weapon.AmmoGive1 10;
		Weapon.slotnumber 2;
		Weapon.AmmoUse1 1;
		Weapon.AmmoUse2 1;
		Weapon.AmmoType2 "Clip";
		tag "941 FBL";
		scale 0.8;
		+WEAPON.NOAUTOFIRE;
		+WEAPON.AMMO_CHECKBOTH;
	}
	
	States
	{
	Spawn:
		DEAG p -1;
		stop;
	flash:
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_JumpIf(callacs("prettyparticles")==0,2);
		TNT1 A 0 A_FireProjectile("PistolParticles",0,0,0,-(56-height)/7,FPF_NOAUTOAIM,0);
		TNT1 A 0 A_FireProjectile("SmokeSpawner",0,0,0);
		TNT1 A 0 A_JumpIf(callacs("tracers")==0,2);
		TNT1 A 0 A_FireProjectile("BulletTracer",frandom(-1,1),0,0,0);
		TNT1 A 0 {
			if (callacs("glflashes")==1){
				A_SpawnItemEx("GunFlashLight3");
			} else {
				A_Light1();
			}
		}		64P2 G 2 Bright;
		64P2 F 1 Bright;
		Goto LightDone;
	Ready:
		bi64 A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		TNT1 A 0 A_JumpIfInventory("isSliding",1,"SlideStart");
		TNT1 A 0 A_JumpIfInventory("PistolLoad",1,"Ready");
		TNT1 A 0 A_JumpIfInventory("Clip",1,"Reload");
		loop;
	SlideStart:
		bi64 A 1 Offset(0,33);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		bi64 A 1 Offset(0,35);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		bi64 A 1 Offset(0,38);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		bi64 A 1 Offset(0,40);
		goto Sliding;
	Sliding:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("isSliding",1,2);
		TNT1 A 0 A_Jump(256,"SlideEnd");
		bi64 A 1 Offset(0,40);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		Loop;
	SlideEnd:
		bi64 A 1 Offset(0,40);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		bi64 A 1 Offset(0,38);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		bi64 A 2 Offset(0,35);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		bi64 A 2 Offset(0,33);
		goto Ready;
	AltFire:
// 		TNT1 A 0 A_JumpIfInventory("PistolLoad",10,"Ready");
// 		TNT1 A 0 A_JumpIfInventory("Clip",1,"Reload");
// 		goto DryFire;
		TNT1 A 0 {
			A_PlaySound("menu/cursor");
			invoker.fullauto = !invoker.fullauto;
			if (invoker.fullauto)  {
				A_Print("Full auto");
			} else {
				A_Print("Semi auto");
			}
		}
		goto Ready;
  Deselect: 
	TNT1 A 0 ;
	TNT1 A 0 A_JumpIf(CallACS("WasReloadPressed"),1);
      TNT1 AAAAAAAAAAAAAAAA 0 A_Lower;
      TNT1 AAAAAAA 1 A_Lower;
      Loop;
	Select:
		TNT1 A 0 A_GiveInventory("HasSwitchedWeapon",1);
		bi64 E 1 Offset(-127, 150) A_PlaySound("weapons/pistolup",7);
		bi64 A 0 A_WeaponReady(WRF_NOFIRE);
		bi64 E 1 Offset(-52, 79);
		bi64 A 0 A_WeaponReady(WRF_NOFIRE);
		bi64 D 1 Offset(-32, 55);
		bi64 A 0 A_WeaponReady(WRF_NOFIRE);
		bi64 D 1 Offset(-15, 43);
		bi64 A 0 A_WeaponReady(WRF_NOFIRE);
		bi64 A 1 Offset(-8, 39);
		bi64 A 0 A_WeaponReady(WRF_NOFIRE);
		bi64 A 1 Offset(-6, 37);
		bi64 A 0 A_WeaponReady(WRF_NOFIRE);
		bi64 A 1 Offset(-4, 36);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		bi64 A 2 Offset(-2, 34);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		bi64 A 2 Offset(-1, 33);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		bi64 A 2 Offset(0, 32);
		goto Ready;
	QuickFire:
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
		TNT1 A 0 A_Refire;
		Goto Ready;
	Fire:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfNoAmmo("Reload");
		TNT1 A 0 A_JumpIfInventory("PistolLoad",2,2);
		goto FireLast;
		TNT1 A 0; 
		TNT1 a 0 ACS_NamedExecute("CheckReloadButton");
		bi64 A 0 Offset(0,36) A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_JumpIfInventory("PistolSpam",0,3);
		bi64 C 0 A_FireBullets (0, 0, -1, 13, "WeaponBulletPuffGibless");
		TNT1 A 0 A_Jump(256,2);
		bi64 C 0 A_FireBullets (11, 8, -1, 12, "WeaponBulletPuffGibless");
		TNT1 A 0 A_GiveInventory("PistolSpam");
		bi64 C 0 A_PlaySound("weapons/1911", 1);
		bi64 C 0 A_GunFlash;
		bi64 B 0 A_spawnitemex ("bulletcasing", 40, 0, 25, random(4,6), random(7,8), random(7,9), 0);
		bi64 A 0 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
		TNT1 A 0 a_setpitch(pitch-0.2*invoker.recoil);
		TNT1 A 0 a_setangle(angle+frandom(-0.05,0.05)*invoker.recoil);
		bi64 B 2 {
			A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
			A_WeaponOffset(frandom(-1.5,1.5),32);
		}
		TNT1 A 0 a_setpitch(pitch-0.2*invoker.recoil);
		TNT1 A 0 a_setangle(angle+frandom(-0.03,0.03)*invoker.recoil);
		TNT1 A 0 A_zoomfactor(0.998,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
		bi64 C 1 {
			A_WeaponReady(WRF_NOFIRE|WRF_NOSECONDARY|WRF_NOSWITCH);
			A_WeaponOffset(frandom(-2.5,2.5),32);
		}
		TNT1 A 0 A_zoomfactor(0.999,ZOOM_NOSCALETURNING);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
		TNT1 A 0 a_setpitch(pitch+0.2*invoker.recoil);
		bi64 D 1 Offset(0,35);
		TNT1 A 0 A_zoomfactor(1,ZOOM_NOSCALETURNING);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE|WRF_NOSECONDARY);
		bi64 E 1 Offset(0,35);
		TNT1 A 0 a_setpitch(pitch+0.2*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		bi64 E 1 Offset(0,35);
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		bi64 E 2 Offset(0,40);
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		TNT1 A 0 {
			if (invoker.fullauto && random(0,1)==1) {
				A_Refire();
			}
		}
		bi64 D 2 Offset(0,45);
		TNT1 A 0 {
			if (invoker.fullauto) {
				A_Refire();
			}
		}
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		bi64 D 2 Offset(0,50);
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		bi64 C 2 Offset(0,55);
		TNT1 A 0 A_PlaySound("weapons/pistol_sliderel", 6, 0.4);
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		TNT1 A 0 A_TakeInventory("PistolSpam");
		TNT1 A 0 A_Refire ;
		bi64 C 2 Offset(0,60);
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		bi64 C 2 Offset(0,53);
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		bi64 B 2 Offset(0,46);
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		TNT1 A 0 A_JumpIf(CallACS("WasReloadPressed"),"Reload");
		bi64 A 2 Offset(0,40);
		TNT1 A 0 A_JumpIf(CallACS("WasReloadPressed"),"Reload");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		bi64 A 2 Offset(0,37);
		TNT1 A 0 A_JumpIf(CallACS("WasReloadPressed"),"Reload");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		bi64 A 3 Offset(0,35);
		TNT1 A 0 A_JumpIf(CallACS("WasReloadPressed"),"Reload");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		TNT1 A 0 A_JumpIf(CallACS("WasReloadPressed"),"Reload");
		bi64 A 4 Offset(0,33);
		TNT1 A 0 A_JumpIf(CallACS("WasReloadPressed"),"Reload");
		TNT1 a 0 ACS_NamedExecute("StopCheckingReload");
		Goto Ready;
	FireLast:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("PistolLoad",1,2);
		TNT1 A 0 A_Jump(256,"Reload");
		TNT1 A 0 ;
		TNT1 a 0 ACS_NamedExecute("CheckReloadButton");
		TNT1 a 0 ACS_NamedExecute("CheckFireReload");
		bi64 A 0 Offset(0,36) A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_JumpIfInventory("PistolSpam",0,3);
		bi64 C 0 A_FireBullets (0, 0, -1, 13, "WeaponBulletPuffGibless");
		TNT1 A 0 A_Jump(256,2);
		bi64 C 0 A_FireBullets (6, 5, -1, 12, "WeaponBulletPuffGibless");
		TNT1 A 0 A_TakeInventory("PistolSpam");
		bi64 C 0 A_PlaySound("weapons/1911", 1);
		bi64 C 0 A_GunFlash;
		bi64 B 0 A_spawnitemex ("bulletcasing", 40, 0, 25, random(4,6), random(7,8), random(7,9), 0);
		bi64 A 0 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
		TNT1 A 0 a_setpitch(pitch-0.2*invoker.recoil);
		TNT1 A 0 a_setangle(angle+frandom(-0.05,0.05)*invoker.recoil);
		bi64 B 2  ;
		bi64 C 1 ;
		TNT1 A 0 a_setpitch(pitch+0.2*invoker.recoil);
		bi64 D 1  Offset(0,40);
		TNT1 A 0 ;
		bi64 E 2 Offset(0,40);
		TNT1 A 0 a_setpitch(pitch+0.1*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
		bi64 E 2 Offset(0,45);
		TNT1 A 0 a_setpitch(pitch+0.1*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
		bi64 D 2 Offset(0,50);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
		bi64 D 2 Offset(0,55);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		bi64 C 2 Offset(0,60);
		TNT1 A 0 A_PlaySound("weapons/pistol_sliderel", 6, 0.4);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		bi64 C 2 Offset(0,65);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		bi64 C 2 Offset(0,60);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		bi64 B 2 Offset(0,55);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_JumpIf(CallACS("WasReloadPressed"),"ReloadManual");
		bi64 A 2 Offset(0,40);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_JumpIf(CallACS("WasReloadPressed"),"ReloadManual");
		bi64 A 2 Offset(0,40);
		TNT1 A 0 A_JumpIf(CallACS("WasReloadPressed"),"ReloadManual");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		bi64 A 2 Offset(0,37);
		TNT1 A 0 A_JumpIf(CallACS("WasReloadPressed"),"ReloadManual");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		bi64 A 3 Offset(0,35);
		TNT1 A 0 A_JumpIf(CallACS("WasReloadPressed"),"ReloadManual");
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY);
		TNT1 A 0 A_JumpIf(CallACS("WasReloadPressed"),"ReloadManual");
		bi64 A 4 Offset(0,33);
		TNT1 A 0 A_JumpIf(CallACS("WasReloadPressed"),"ReloadManual");
		TNT1 a 0 ACS_NamedExecute("StopCheckingReload");
		TNT1 A 0 A_CheckReload;
		Goto Reload;
	ReloadManual:
		TNT1 A 0 A_GiveInventory("ReloadedManually",1);
	Reload:
		TNT1 a 0 ACS_NamedExecute("StopCheckingReload");
		TNT1 A 0 A_CheckReload;
		TNT1 A 0 A_JumpIfInventory("Clip",1,2);
		TNT1 A 0 A_Jump(256,"DryFire");
		TNT1 A 0 A_JumpIfInventory("PistolLoad", 10, "Ready");
		TNT1 A 0 A_PlaySound("weapons/pistol_clipout", 6);
		TNT1 A 0 A_PlaySound("weapons/pistol_slidebac", 7);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		br64 a 2;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		br64 b 2;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		br64 c 3;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		br64 d 3;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		br64 e 3 ;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_PlaySound("weapons/pistol_clipin", 6);
		br64 fg 3;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		br64 h 2 ;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_PlaySound("weapons/pistol_slidefor", 7);
	UnitReload:
		TNT1 A 0 A_JumpIfInventory("Clip", 1, 1);
		Goto ReloadFinish;
		TNT1 A 0 A_JumpIfInventory("PistolLoad", 10, "ReloadFinish");
		TNT1 A 0 A_TakeInventory("Clip", 1, TIF_NOTAKEINFINITE);
		TNT1 A 0 A_GiveInventory("PistolLoad", 1);
		Goto UnitReload;
	ReloadFinish:
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		br64 h 2;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		br64 i 4 ;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		br64 j 2;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		br64 kl 2 ;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		br64 m 3;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		br64 n 2 ;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_JumpIfInventory("ReloadedManually",0,2);
		TNT1 A 0 A_Jump(256,3);
		TNT1 A 0 A_TakeInventory("ReloadedManually",0);
		TNT1 A 0 A_Refire;
		TNT1 A 0 A_WeaponReady();
		bi64 A 2 Offset(-2,33);
		TNT1 A 0 A_WeaponReady();
		bi64 A 2 Offset(-1,32);
		TNT1 A 0 A_WeaponReady();
		bi64 A 2 Offset(0,32);
		Goto Ready;
	NoAmmo:
		TNT1 A 0;
	DryFire:
		TNT1 A 0 A_CheckReload;
		bi64 A 5 A_PlaySound("weapons/akclick",CHAN_WEAPON);
		goto Ready;
	}
}

Class PistolSpam: Inventory 
{
	default{Inventory.MaxAmount 1;}
}

Class PistolLoad : Ammo
{
   default{Inventory.MaxAmount 10;}
}

Class ReloadedManually: Inventory
{
	default{Inventory.MaxAmount 1;}
}


Class PistolParticles : GunFlashParticles
{
	states
	{
	spawn:
		TNT1 a 0;
		TNT1 AA 0 A_SpawnParticle ("ffff00", SPF_FULLBRIGHT | SPF_RELATIVE, random(1,3), frandom(0.5,2), 0, 0,0,0, frandom(-5,5),frandom(-6,6),frandom(-5,5), 0,0,-1, 0.98, -1);
		TNT1 A 0 A_Jump (256, 1,2,3);
		TNT1 AAA 0 A_SpawnParticle ("ffff55", SPF_FULLBRIGHT | SPF_RELATIVE, random(1,3), frandom(0.3,1), 0,0,0,0, frandom(-5,5),frandom(-6,6),frandom(-5,5), 0,0,-1, 0.98, -1);
		TNT1 A 0 A_Jump (256, 1,2,3);
		TNT1 AAAA 0 A_SpawnParticle ("ffffaa", SPF_FULLBRIGHT | SPF_RELATIVE, random(1,3), frandom(0.3,1), 0, 0,0,0, frandom(-5,5),frandom(-6,6),frandom(-5,5), 0,0,-1, 0.98, -1);
		TNT1 A 0 A_Jump (256, 1,2,3);
		TNT1 AAAAA 0 A_SpawnParticle ("ffffff", SPF_FULLBRIGHT | SPF_RELATIVE, random(1,3), frandom(0.3,1), 0,0,0,0, frandom(-5,5),frandom(-6,6),frandom(-5,5), 0,0,-1, 0.98, -1);
	death:
		TNT1 A 0;
		stop;
	}
}


