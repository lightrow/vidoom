Class Spas : SuperShotgun
{	
	float recoil;

	override void BeginPlay() {	
		recoil = 1.6;
		Super.BeginPlay();
	}
	
	default
	{	
		Weapon.BobStyle "Alpha";
		Weapon.BobSpeed 3.12;
		Weapon.BobRangeX 0.2;
		Weapon.BobRangeY 0.3;
		Weapon.SlotPriority 1;
		Weapon.SlotNumber 3;
		Weapon.AmmoUse1 1;
		Weapon.AmmoUse2 1;
		Weapon.AmmoType1 "LoadedShell";
		Weapon.AmmoType2 "Shell";
		decal "bulletchip";
		+WEAPON.AMMO_CHECKBOTH;
		inventory.pickupmessage "a lost LAW-12";
		scale 0.8;
		tag "LAW-12";
	}
	States
	{
	Spawn:
		SPAS P -1;
		Stop;
	Ready:
		spas A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		TNT1 A 0 A_JumpIfInventory("isSliding",1,"SlideStart");
		TNT1 A 0 A_JumpIf(callacs("autoreload")==0,"Ready");
		TNT1 A 0 A_JumpIfInventory("LoadedShell",0,"Ready");
		TNT1 A 0 A_JumpIfInventory("Shell",1,"Reload");
		loop;
	UnloadedReady:
		spas A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		TNT1 A 0 A_JumpIfInventory("isSliding",1,"SlideStart");
		loop;
	SlideStart:
		spas A 1 Offset(0,33);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		spas A 1 Offset(0,35);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		spas A 1 Offset(0,38);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		spas A 1 Offset(0,40);
		goto Sliding;
	Sliding:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("isSliding",1,2);
		TNT1 A 0 A_Jump(256,"SlideEnd");
		spas A 1 Offset(0,40);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		Loop;
	SlideEnd:
		spas A 1 Offset(0,40);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		spas A 1 Offset(0,38);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		spas A 2 Offset(0,35);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		spas A 2 Offset(0,33);
		goto Ready;
	flash:
		TNT1 A 0;
		TNT1 A 0 {
			A_FireProjectile("SmokeSpawner",0,0,0);
			if (callacs("tracers")==1){
				A_FireProjectile("BulletTracer",frandom(-4,4),0,0,0,0,frandom(-2,2));
				A_FireProjectile("BulletTracer",frandom(-4,4),0,0,0,0,frandom(-2,2));
				A_FireProjectile("BulletTracer",frandom(-4,4),0,0,0,0,frandom(-2,2));
				A_FireProjectile("BulletTracer",frandom(-4,4),0,0,0,0,frandom(-2,2));
				A_FireProjectile("BulletTracer",frandom(-4,4),0,0,0,0,frandom(-2,2));
				A_FireProjectile("BulletTracer",frandom(-4,4),0,0,0,0,frandom(-2,2));
				A_FireProjectile("BulletTracer",frandom(-4,4),0,0,0,0,frandom(-2,2));
				A_FireProjectile("BulletTracer",frandom(-4,4),0,0,0,0,frandom(-2,2));
			}
			if (callacs("prettyparticles")==1){
				A_FireProjectile("ShotgunParticles",0,0,0,-(56-height)/7,FPF_NOAUTOAIM,0);
			}
			if (callacs("glflashes")==1){
				A_SpawnItemEx("GunFlashLight2");
			} else {
				A_Light2();
			}
		}
		TNT1 A 0 A_Jump(256,"Flash1","Flash2");
	Flash1:
		SPAS Z 1 Bright;
		TNT1 A 0 {
			if (callacs("glflashes")!=1){
				A_Light1();
			}
		}
		SPAS Y 1 Bright;
		SPAS Z 1 Bright;
		Goto LightDone;
	Flash2:
		SPAS Z 1 Bright;
		TNT1 A 0 {
			if (callacs("glflashes")!=1){
				A_Light1();
			}
		}
		SPAS Y 1 Bright;
		Goto LightDone;
   Deselect: 
      TNT1 AAAAAAAAAAAAAAAA 0 A_Lower;
      TNT1 AAAAAAA 1 A_Lower;
      Loop;
	Select:
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_GiveInventory("HasSwitchedWeapon",1);
		spas A 1 Offset(67, 100) A_PlaySound("weapons/pumpup3",7);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		spas A 1 Offset(54, 81);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		spas A 1 Offset(32, 69);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		spas A 1 Offset(22, 58);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		spas A 1 Offset(10, 47);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		spas A 1 Offset(7, 39);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		spas A 1 Offset(3, 36);
		TNT1 A 0 A_WeaponReady();
		spas A 2 Offset(2, 34);
		TNT1 A 0 A_WeaponReady();
		spas A 2 Offset(1, 33);
		TNT1 A 0 A_WeaponReady();
		spas A 2 Offset(0, 32);
		TNT1 A 0 A_WeaponReady();
		goto ready;
	Fire:
		TNT1 A 0 A_JumpIfInventory("LoadedShell",1,2);
		TNT1 A 0 A_Jump(256,"Reload");
		TNT1 A 0 ;
		TNT1 A 0 A_FireBullets (7, 4, 1, 3, "WeaponBulletPuffSmall",FBF_USEAMMO);
		TNT1 A 0 A_FireBullets (7, 4, 14, 2, "WeaponBulletPuffPainlessSmall",0);
		TNT1 A 0 A_gunflash;
		TNT1 A 0 A_PlaySound("weapons/pumpfire", CHAN_WEAPON);
		TNT1 A 0 a_setpitch(pitch-1*invoker.recoil);
		TNT1 A 0 a_setangle(angle+frandom(-0.2,0.2)*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		spas a 1 Offset(0,41);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		spab a 1 A_WeaponOffset(random(-1,1),44);
		TNT1 A 0 A_spawnitemex ("shellcasing", 30, 8, 22, random(3,4), random(7,8), random(7,9), 0);
		TNT1 A 0 A_zoomfactor(0.997,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 a_setpitch(pitch-0.25*invoker.recoil);
		TNT1 A 0 a_setangle(angle+frandom(-0.1,0.1)*invoker.recoil);
		spab a 1 Offset(0,40);
		TNT1 A 0 A_zoomfactor(0.9985,ZOOM_NOSCALETURNING);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 a_setpitch(pitch+0.3*invoker.recoil);
		spas a 2 Offset(0,37);
		TNT1 A 0 A_zoomfactor(1,ZOOM_NOSCALETURNING);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 a_setpitch(pitch+0.6*invoker.recoil);
		spas A 2 Offset(0,34);
		TNT1 A 0 a_setpitch(pitch+0.35*invoker.recoil);
		TNT1 A 0 A_WeaponReady();
		spas A 2 Offset(0,33);
		TNT1 A 0 A_WeaponReady();
		spas A 2 Offset(0,32)  A_ReFire ;
		TNT1 A 0 A_JumpIfInventory("LoadedShell",1,"Ready");
		TNT1 A 0 A_WeaponReady();
		goto Reload;
	Altfire:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("LoadedShell",1,"UnloadStart");
		goto Ready;
	UnloadStart:
		SPAS b 1 A_WeaponReady(WRF_NOFIRE);
		SPAS c 1 A_WeaponReady(WRF_NOFIRE);
		SPAS d 1 A_WeaponReady(WRF_NOFIRE);
		SPAS e 1 A_WeaponReady(WRF_NOFIRE);
		SPAS f 2 A_WeaponReady(WRF_NOFIRE);
		goto UnitUnload;
	UnloadLast:
		TNT1 A 0 A_PlaySound("weapons/drrrnk",7);
		SPAS f 2 Offset(0,31);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE) ;
		SPAS f 3 Offset(-4,29);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_GiveInventory("Shell", countinv("LoadedShell"));
		TNT1 A 0 A_TakeInventory("LoadedShell", 0);
		SPAS f 2 Offset(-3,31);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS f 2 Offset(-2,31);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS f 1 Offset(0,32) ;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS f 1 Offset(0,32) ;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS e 1 Offset(-2,31);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS d 1 A_WeaponReady(WRF_NOFIRE);
		SPAS c 1 A_WeaponReady(WRF_NOFIRE);
		SPAS b 2 offset(2,31);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		spas A 2 offset(2,31) ;
		TNT1 A 0 A_WeaponReady();
		spas A 2 offset(1,32);
		TNT1 A 0 A_WeaponReady();
		spas A 2 offset(0,32) ;
		TNT1 A 0 A_WeaponReady();
		goto UnloadedReady;
	UnitUnload:
		TNT1 A 0 A_JumpIfInventory("LoadedShell", 2, 1);
		Goto UnloadLast;
		TNT1 A 0 A_PlaySound("weapons/drrrnk",7);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS f 2 Offset(0,31);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE) ;
		SPAS f 3 Offset(-4,29);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_GiveInventory("Shell", 1);
		TNT1 A 0 A_TakeInventory("LoadedShell", 1);
		SPAS f 2 Offset(-3,31);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS f 1 Offset(-2,31);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS f 1 Offset(0,32) ;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		Goto UnitUnload;
	Reload:
		TNT1 A 0 A_JumpIfInventory("LoadedShell",0,"Ready");
		TNT1 A 0 A_CheckReload();
		TNT1 A 0 A_JumpIfInventory("Shell",1,2);
		TNT1 A 0 A_Jump(256,"DryFire");
		TNT1 A 0 A_JumpIfInventory("LoadedShell",1,"StartReloadShootable");
	StartReload:
		SPAS b 1 A_WeaponReady(WRF_NOFIRE);
		SPAS c 1 A_WeaponReady(WRF_NOFIRE);
		SPAS d 1 A_WeaponReady(WRF_NOFIRE);
		SPAS e 1 A_WeaponReady(WRF_NOFIRE);
		SPAS f 1 A_WeaponReady(WRF_NOFIRE);
		goto UnitReload;
	StartReloadShootable:
		SPAS b 1 A_WeaponReady(WRF_NOSECONDARY);
		SPAS c 1 A_WeaponReady(WRF_NOSECONDARY);
		SPAS d 1 A_WeaponReady(WRF_NOSECONDARY);
		SPAS e 1 A_WeaponReady(WRF_NOSECONDARY);
		SPAS f 1 A_WeaponReady(WRF_NOSECONDARY);
		goto UnitReload;
	UnitReload:
		TNT1 A 0 A_JumpIfInventory("Shell", 2, 1);
		Goto ReloadFinish;
		TNT1 A 0 A_JumpIfInventory("LoadedShell", 3, "ReloadFinish")     ;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_PlaySound("weapons/shellinsert",7);
		SPAS f 2 Offset(0,31);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE) ;
		SPAS f 2 Offset(-4,29);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_TakeInventory("Shell", 1, TIF_NOTAKEINFINITE);
		TNT1 A 0 A_GiveInventory("LoadedShell", 1);
		SPAS f 2 Offset(-3,31);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS f 2 Offset(-2,31);
		TNT1 A 0 A_JumpIf(CallACS("CheckFireHold"),"QuickFire");
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS f 1 Offset(0,32) ;
		TNT1 A 0 A_JumpIf(CallACS("CheckFireHold"),"QuickFire");
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS f 1 Offset(0,32) ;
		TNT1 A 0 A_JumpIf(CallACS("CheckFireHold"),"QuickFire");
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		Goto UnitReload    ;
	QuickFire:
		TNT1 A 0 A_PlaySound("weapons/gunfoley4",6,1);
		SPAS d 1 A_WeaponReady(WRF_NOFIRE);
		SPAS c 1 A_WeaponReady(WRF_NOFIRE);
		SPAS b 2 A_WeaponReady(WRF_NOFIRE);
		Goto Fire;
	ReloadFinish:
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_PlaySound("weapons/shellinsert",7);
		SPAS f 2 Offset(0,31);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE) ;
		SPAS f 3 Offset(-4,29);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_TakeInventory("Shell", 1, TIF_NOTAKEINFINITE);
		TNT1 A 0 A_GiveInventory("LoadedShell", 1);
		SPAS f 2 Offset(-3,31);
		TNT1 A 0 A_PlaySound("weapons/gunfoley4",6,0.6);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS f 2 Offset(-2,31);
		TNT1 A 0 A_JumpIf(CallACS("CheckFireHold"),"QuickFire");
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS f 1 Offset(0,32) ;
		TNT1 A 0 A_JumpIf(CallACS("CheckFireHold"),"QuickFire");
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS f 1 Offset(0,32) ;
		TNT1 A 0 A_JumpIf(CallACS("CheckFireHold"),"QuickFire");
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS e 1 Offset(-2,31);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		SPAS d 1 A_WeaponReady(WRF_NOFIRE);
		SPAS c 1 A_WeaponReady(WRF_NOFIRE);
		SPAS b 2 offset(2,31);
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		spas A 2 offset(2,31) ;
		TNT1 A 0 A_WeaponReady();
		spas A 2 offset(1,32);
		TNT1 A 0 A_WeaponReady();
		spas A 2 offset(0,32) ;
		TNT1 A 0 A_WeaponReady();
		goto Ready;
	DryFire:
		TNT1 A 0 A_CheckReload;
		SPAS c 1 A_WeaponReady(WRF_NOFIRE);
		SPAS A 5 A_PlaySound("weapons/akclick",CHAN_WEAPON);
		SPAS c 1 A_WeaponReady(WRF_NOFIRE);
		goto Ready;

	}
}

Class LoadedShell : Ammo
{
	default{
   Inventory.MaxAmount 4;
}}


Class ShotgunParticles : GunFlashParticles
{
	states
	{
	spawn:
		NULL A 1 ;
		TNT1 AAAA 0 A_SpawnParticle ("ffff00", SPF_FULLBRIGHT | SPF_RELATIVE, random(1,3), frandom(1,3), 0, 0,0,0, frandom(-5,5),frandom(-6,6),frandom(-5,5), 0,0,-1, 0.98, -1);
		TNT1 A 0 A_Jump (256, 1,2,3);
		TNT1 AAAAAA 0 A_SpawnParticle ("ffff55", SPF_FULLBRIGHT | SPF_RELATIVE, random(1,4), frandom(1,3), 0,0,0,0, frandom(-5,5),frandom(-6,6),frandom(-5,5), 0,0,-1, 0.98, -1);
		TNT1 A 0 A_Jump (256, 1,2,3);
		TNT1 AAAAAAAA 0 A_SpawnParticle ("ffffaa", SPF_FULLBRIGHT | SPF_RELATIVE, random(1,3), frandom(1,2), 0, 0,0,0, frandom(-5,5),frandom(-6,6),frandom(-5,5), 0,0,-1, 0.98, -1);
		TNT1 A 0 A_Jump (256, 1,2,3);
		TNT1 AAAAAAAAAA 0 A_SpawnParticle ("ffffff", SPF_FULLBRIGHT | SPF_RELATIVE, random(1,3), frandom(1,2), 0,0,0,0, frandom(-5,5),frandom(-6,6),frandom(-5,5), 0,0,-1, 0.98, -1);
		TNT1 A 2;
	death:
		TNT1 A 0;
		stop;
	}
}
