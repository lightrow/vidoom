Class Rage: Ammo
{
	default
  { 
  Inventory.PickupMessage "Sharpness Up!";
	Inventory.maxamount 100;
  }
}

Class FireAxe : Weapon replaces Fist
{
float recoil;
float recoilAngry;
default{
	Weapon.BobStyle "Alpha";
	Weapon.BobSpeed 3.12;
	Weapon.BobRangeX 0.6; 
	Weapon.BobRangeY 0.5;
	Weapon.AmmoType1 "Rage";
	Weapon.AmmoUse 1;
	Weapon.SelectionOrder 8999;
	Weapon.SlotNumber 1;
	inventory.pickupmessage "a lost axe. Wtf";
	+WEAPON.AMMO_OPTIONAL;
	+WEAPON.AXEBLOOD;
	Tag "Axe";
	DamageType "Extreme";
	
}

	override void BeginPlay() {	
		recoil = 2.5;
		recoilAngry = 2;
		Super.BeginPlay();
	}
	
	bool wasQuickMelee;

	States
	{
	Spawn:
		AXEP a -1;
		stop;
	Ready:
		AXEG A 1 {
			A_WeaponReady();
			if (CheckInventory("isQuickMelee",1)) {
				return ResolveState("Fire");
			}
			if (CheckInventory("isSliding",1)){
				return ResolveState("SlideStart");
			}
			return ResolveState(null);
		}
		loop;
	ReadyFire:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("isSliding",1,"SlideStart");
		AXEF A 1;
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		loop;
	SlideStart:
		AXEG A 1 Offset(0,33);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		AXEG A 1 Offset(0,35);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		AXEG A 1 Offset(0,38);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		AXEG A 1 Offset(0,40);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		goto Sliding;
	Sliding:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("isSliding",1,2);
		TNT1 A 0 A_Jump(256,"SlideEnd");
		AXEG A 1 Offset(0,40);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		Loop;
	SlideEnd:
		AXEG A 1 Offset(0,40);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		AXEG A 1 Offset(0,38);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		AXEG A 2 Offset(0,35);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		AXEG A 2 Offset(0,33);
		TNT1 A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		goto Ready;
	SelectLast:
		TNT1 A 0;
		TNT1 A 0 {
			invoker.wasQuickMelee = false;
			let gal = VoyageGal(player.mo);
			string lastWeapon = gal.LastWeapon;
			A_SelectWeapon(lastWeapon);
		}
		TNT1 A 0;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE);
		goto Select;
   Deselect: 
      TNT1 AAAAAAAAAAAAAAAA 0 A_Lower;
      TNT1 AAAAAAA 1 A_Lower;
      Loop;
    Select:
	  	TNT1 A 0 {
			if (CheckInventory("isQuickMelee", 1)){
				invoker.wasQuickMelee = true;
				return ResolveState("Fire");
			}
			return ResolveState(null);
		}
		TNT1 A 0 A_WeaponReady();
		AXEG A 1 Offset(-67, 100) A_PlaySound("weapons/axeup",7);
		TNT1 A 0 A_WeaponReady();
		AXEG A 1 Offset(-54, 81);
		TNT1 A 0 A_WeaponReady();
		AXEG A 1 Offset(-32, 69);
		TNT1 A 0 A_WeaponReady();
		AXEG A 1 Offset(-16, 58);
		TNT1 A 0 A_WeaponReady();
		AXEG A 1 Offset(-10, 47);
		TNT1 A 0 A_WeaponReady();
		AXEG A 1 Offset(-3, 39);
		TNT1 A 0 A_WeaponReady();
		AXEG A 1 Offset(-2, 36);
		TNT1 A 0 A_WeaponReady();
		AXEG A 2 Offset(-1, 34);
		TNT1 A 0 A_WeaponReady();
		AXEG A 2 Offset(0, 33);
		TNT1 A 0 A_WeaponReady();
		AXEG A 1 Offset(0, 32);
		TNT1 A 0 A_WeaponReady();
		goto Ready;
	Fire:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("Rage",1,"FireRage");
		TNT1 A 0 A_Jump(128,"Fire2");
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEA A 2 ;
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_SetPitch(pitch-0.4*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll- 0.4*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle-0.4*invoker.recoil);
		AXEA B 2;
		TNT1 A 0 A_SetPitch(pitch-0.4*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll- 0.4*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle-0.8*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEA C 2;
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEA C 2 Offset(5,28);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_SetAngle(angle-0.2*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_PlaySound("weapons/axemiss",1);
		AXEA D 1 ;
		TNT1 A 0 A_FireProjectile("AxeSlash",80,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",60,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",40,0);
		TNT1 A 0 A_SetPitch(pitch+0.4*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll+ 0.4*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle+0.4*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_SetPitch(pitch+0.8*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll+ 0.8*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle+1*invoker.recoil);
		AXEA E 1 ;
		TNT1 A 0 A_FireProjectile("AxeSlash",30,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",20,0);
		TNT1 A 0 A_FireProjectile("AxeSlashMainStrong",0,0)		;
		TNT1 A 0 A_FireProjectile("AxeSlash",-20,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",-30,0);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_SetPitch(pitch+0.6*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll+ 0.6*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle+1*invoker.recoil);
		AXEA F 1;
		TNT1 A 0 A_FireProjectile("AxeSlash",-40,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",-60,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",-80,0);
		TNT1 A 0 A_SetPitch(pitch+0.2*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll+ 0.2*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle+0.2*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 2;
		TNT1 A 0 A_SetPitch(pitch-0.2*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll-0.2*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle-0.4*invoker.recoil);
		TNT1 A 2;
		TNT1 A 0 A_SetPitch(pitch-0.4*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll-0.4*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle-0.6*invoker.recoil);
		TNT1 A 2;
		TNT1 A 0 A_SetPitch(pitch-0.4*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll-0.4*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle-0.2*invoker.recoil);
		TNT1 A 2;
		TNT1 A 0 A_SetPitch(pitch-0.2*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll-0.2*invoker.recoil);
		TNT1 A 2;
		TNT1 A 0 A_JumpIfInventory("Rage",1,2);
		TNT1 A 0 A_Jump(256, "Reset");
		TNT1 A 1 {
			A_Refire("FireRage");
			if (CheckInventory("isQuickMelee",1)){
				return ResolveState("FireRage");
			}
			return ResolveState(null);
		}
		Goto Reset;
	Fire2:
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEB A 2;
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEB B 1;
		TNT1 A 0 A_SetRoll(roll+0.4*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle+0.4*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEB C 1;
		TNT1 A 0 A_SetPitch(pitch-0.2*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll+0.4*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle+0.4*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEB D 2;
		TNT1 A 0 A_SetPitch(pitch-0.6*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll+0.4*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle+0.6*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEB E 2 ;
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEB E 2 Offset(-5,28);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_SetPitch(pitch-0.6*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll+0.2*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle+0.4*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_PlaySound("weapons/axemiss",1);
		AXEB F 1;
		TNT1 A 0 A_FireProjectile("AxeSlash",-80,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",-60,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",-40,0);
		TNT1 A 0 A_SetPitch(pitch+0.6*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll-0.4*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle-0.6*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEB G 1 ;
		TNT1 A 0 A_FireProjectile("AxeSlash",-30,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",-20,0)	;
		TNT1 A 0 A_FireProjectile("AxeSlashMainStrong",0,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",20,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",30,0);
		TNT1 A 0 A_SetPitch(pitch+0.8*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll- 0.6*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle-1.2*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEB H 1;
		TNT1 A 0 A_FireProjectile("AxeSlash",40,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",60,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",80,0);
		TNT1 A 0 A_SetPitch(pitch+1*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll-0.4*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle-1*invoker.recoil);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 2;
		TNT1 A 0 A_SetPitch(pitch+0.2*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll-0.2*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle-0.4*invoker.recoil);
		TNT1 A 2;
		TNT1 A 0 A_SetPitch(pitch-0.4*invoker.recoil);
		TNT1 A 0 A_SetRoll(roll+0.2*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle+0.4*invoker.recoil);
		TNT1 A 2;
		TNT1 A 0 A_SetPitch(pitch-0.6*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle+0.6*invoker.recoil);
		TNT1 A 2;
		TNT1 A 0 A_SetPitch(pitch-0.2*invoker.recoil);
		TNT1 A 0 A_SetAngle(angle+0.4*invoker.recoil);
		TNT1 A 2;
		TNT1 A 0 A_JumpIfInventory("Rage",1,2);
		TNT1 A 0 A_Jump(256, "Reset");
		TNT1 A 1 {
			A_Refire("FireRage");
			if (CheckInventory("isQuickMelee",1)){
				return ResolveState("FireRage");
			}
			return ResolveState(null);
		}
		Goto Reset;
	FireRage:
		TNT1 A 0;
		//TNT1 A 0 A_Jump(128,"FireRage2");
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		//AXEA A 1 ;
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_SetPitch(pitch-0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll- 0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle-0.4*invoker.recoilAngry);
		AXEA B 2;
		TNT1 A 0 A_SetPitch(pitch-0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll- 0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle-0.8*invoker.recoilAngry);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEA C 1;
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEA C 1 Offset(5,28);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_SetAngle(angle-0.2*invoker.recoilAngry);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_PlaySound("weapons/axemissquick",1);
		AXEA D 1 ;
		TNT1 A 0 A_FireProjectile("AxeSlash",80,1);
		TNT1 A 0 A_FireProjectile("AxeSlash",60,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",40,0);
		TNT1 A 0 A_SetPitch(pitch+0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll+ 0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle+0.4*invoker.recoilAngry);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_SetPitch(pitch+0.8*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll+ 0.8*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle+1*invoker.recoilAngry);
		AXEA E 1 ;
		TNT1 A 0 A_FireProjectile("AxeSlash",30,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",20,0);
		TNT1 A 0 A_FireProjectile("AxeSlashMain",0,0)		;
		TNT1 A 0 A_FireProjectile("AxeSlash",-20,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",-30,0);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_SetPitch(pitch+0.6*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll+ 0.6*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle+1*invoker.recoilAngry);
		AXEA F 1;
		TNT1 A 0 A_FireProjectile("AxeSlash",-40,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",-60,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",-80,0);
		TNT1 A 0 A_SetPitch(pitch+0.2*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll+ 0.2*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle+0.2*invoker.recoilAngry);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 1;
		TNT1 A 0 A_SetPitch(pitch-0.2*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll-0.2*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle-0.4*invoker.recoilAngry);
		TNT1 A 1;
		TNT1 A 0 A_SetPitch(pitch-0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll-0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle-0.6*invoker.recoilAngry);
		TNT1 A 1;
		TNT1 A 0 A_SetPitch(pitch-0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll-0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle-0.2*invoker.recoilAngry);
		TNT1 A 1;
		TNT1 A 0 A_SetPitch(pitch-0.2*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll-0.2*invoker.recoilAngry);
		TNT1 A 0 A_JumpIfInventory("Rage",1,2);
		TNT1 A 0 A_Jump(256, "Reset");
		TNT1 A 1 {
			A_Refire("FireRage2");
			if (CheckInventory("isQuickMelee",1)){
				return ResolveState("FireRage2");
			}
			return ResolveState(null);
		}
		Goto Reset;
	FireRage2:
		//TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		//AXEB A 1;
		//TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		//AXEB B 2;
		TNT1 A 0 A_SetRoll(roll+0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle+0.4*invoker.recoilAngry);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEB C 1;
		TNT1 A 0 A_SetPitch(pitch-0.2*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll+0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle+0.4*invoker.recoilAngry);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEB D 1;
		TNT1 A 0 A_SetPitch(pitch-0.6*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll+0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle+0.6*invoker.recoilAngry);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEB E 1 ;
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEB E 1 Offset(-5,28);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_SetPitch(pitch-0.6*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll+0.2*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle+0.4*invoker.recoilAngry);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 0 A_PlaySound("weapons/axemissquick",1);
		AXEB F 1;
		TNT1 A 0 A_FireProjectile("AxeSlash",-80,1);
		TNT1 A 0 A_FireProjectile("AxeSlash",-60,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",-40,0);
		TNT1 A 0 A_SetPitch(pitch+0.6*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll-0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle-0.6*invoker.recoilAngry);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEB G 1 ;
		TNT1 A 0 A_FireProjectile("AxeSlash",-30,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",-20,0)	;
		TNT1 A 0 A_FireProjectile("AxeSlashMain",0,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",20,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",30,0);
		TNT1 A 0 A_SetPitch(pitch+0.8*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll- 0.6*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle-1.2*invoker.recoilAngry);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEB H 1;
		TNT1 A 0 A_FireProjectile("AxeSlash",40,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",60,0);
		TNT1 A 0 A_FireProjectile("AxeSlash",80,0);
		TNT1 A 0 A_SetPitch(pitch+1*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll-0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle-1*invoker.recoilAngry);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		TNT1 A 1;
		TNT1 A 0 A_SetPitch(pitch+0.2*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll-0.2*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle-0.4*invoker.recoilAngry);
		TNT1 A 1;
		TNT1 A 0 A_SetPitch(pitch-0.4*invoker.recoilAngry);
		TNT1 A 0 A_SetRoll(roll+0.2*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle+0.4*invoker.recoilAngry);
		TNT1 A 1;
		TNT1 A 0 A_SetPitch(pitch-0.6*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle+0.6*invoker.recoilAngry);
		TNT1 A 1;
		TNT1 A 0 A_SetPitch(pitch-0.2*invoker.recoilAngry);
		TNT1 A 0 A_SetAngle(angle+0.4*invoker.recoilAngry);
		TNT1 A 0 A_JumpIfInventory("Rage",1,2);
		TNT1 A 0 A_Jump(256, "Reset");
		TNT1 A 1 {
			A_Refire("FireRage");
			if (CheckInventory("isQuickMelee",1)){
				return ResolveState("FireRage");
			}
			return ResolveState(null);
		}
		Goto Reset;
	Reset:
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEG A 1 Offset(-67, 100) ;
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEG A 1 Offset(-54, 81);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEG A 1 Offset(-32, 69);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEG A 1 Offset(-22, 58);
		TNT1 A 0 A_WeaponReady(WRF_NoFire|WRF_NoSwitch);
		AXEG A 1 Offset(-10, 47);
		TNT1 A 0 {
			A_Refire("Fire");
			if (CheckInventory("isQuickMelee",1)) {
				return ResolveState("Fire");
			}
			if (invoker.wasQuickMelee) {
				return ResolveState("SelectLast");
			}
			return ResolveState(null);
		}
		AXEG A 1 Offset(-7, 39);
		TNT1 A 0 A_WeaponReady();
		AXEG A 1 Offset(-4, 36);
		TNT1 A 0 A_WeaponReady();
		AXEG A 2 Offset(-2, 34);
		TNT1 A 0 A_WeaponReady();
		AXEG A 2 Offset(-1, 33);
		TNT1 A 0 A_WeaponReady();
		AXEG A 1 Offset(0, 32);
		TNT1 A 0 A_WeaponReady();
		goto Ready;
	}
}


Class AxeSlash : FastProjectile
{
default{    Radius 1;
    Height 1;
    Speed 70;
    DamageFunction (10);
    DamageType "Melee";
    Species "Player";
    Projectile;
    +BLOODSPLATTER;
    //+THRUGHOST;
    +NOTIMEFREEZE;
    +EXTREMEDEATH;
    +SPECTRAL ;
	+PAINLESS;}
    States
    {
    Spawn:
        TNT1 A 1;
        Stop;
    Death:
		TNT1 A 0;
		TNT1 A 0 A_Playsound("weapons/axehitwall",1);
		TNT1 AAA 0 A_SpawnItemEx("AkzeSmoke",0,0,0,0,random(-30,30)/100.00,random(10,35)/100.00,random(0,180),160);
        TNT1 A 0 A_SpawnItemEx("AkzePuff",0,0,0,0,0,0,0,32);
		TNT1 A 10;
		Stop;
	XDeath:
		TNT1 A 0;
		TNT1 A 0 A_Playsound("weapons/fisthit",CHAN_WEAPON);
		PUFF CD 2 ;
		TNT1 A 8;
		Stop;
	Crash:
		PUFF CD 2 A_Playsound("weapons/axehitwall",1);
		TNT1 A 8;
		Stop;
	}

}

Class AxeSlashMain : AxeSlash
{
default{   
	DamageFunction  (25);
	Decal "AxeDecal";
	-PAINLESS;}
}

Class AxeSlashMainStrong : AxeSlash
{
default
{   
	DamageFunction (30);
    DamageType "Melee";
	Decal "AxeDecalBig";
}
}
